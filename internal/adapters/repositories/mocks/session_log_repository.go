// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	types "github.com/robstave/meowmorize/internal/domain/types"
)

// SessionLogRepository is an autogenerated mock type for the SessionLogRepository type
type SessionLogRepository struct {
	mock.Mock
}

// CreateLog provides a mock function with given fields: log
func (_m *SessionLogRepository) CreateLog(log types.SessionLog) error {
	ret := _m.Called(log)

	var r0 error
	if rf, ok := ret.Get(0).(func(types.SessionLog) error); ok {
		r0 = rf(log)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PruneLogs provides a mock function with given fields: maxRows
func (_m *SessionLogRepository) PruneLogs(maxRows int) error {
	ret := _m.Called(maxRows)

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(maxRows)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewSessionLogRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewSessionLogRepository creates a new instance of SessionLogRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSessionLogRepository(t mockConstructorTestingTNewSessionLogRepository) *SessionLogRepository {
	mock := &SessionLogRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
