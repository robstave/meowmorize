basePath: /api
definitions:
  types.Card:
    properties:
      back:
        description: Embedded field for 'back' details
        properties:
          text:
            type: string
        type: object
      deck_id:
        type: string
      front:
        description: Embedded field for 'front' details
        properties:
          text:
            type: string
        type: object
      id:
        type: string
    type: object
  types.Deck:
    properties:
      cards:
        items:
          $ref: '#/definitions/types.Card'
        type: array
      description:
        description: New Description field
        type: string
      id:
        description: UUID string as the primary key
        type: string
      name:
        type: string
    type: object
host: 192.168.86.176:8789
info:
  contact: {}
  description: API documentation for the MeowMorize Flashcard App.
  title: MeowMorize Flashcard API
  version: "1.0"
paths:
  /decks:
    get:
      description: Retrieve a list of all decks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Deck'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all decks
      tags:
      - Decks
    post:
      consumes:
      - application/json
      description: Create a new deck with provided details
      parameters:
      - description: Deck to create
        in: body
        name: deck
        required: true
        schema:
          $ref: '#/definitions/types.Deck'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/types.Deck'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new deck
      tags:
      - Decks
  /decks/{id}:
    delete:
      description: Delete a deck by its ID
      parameters:
      - description: Deck ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a deck
      tags:
      - Decks
    get:
      description: Retrieve a single deck by its ID
      parameters:
      - description: Deck ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Deck'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a deck by ID
      tags:
      - Decks
    put:
      consumes:
      - application/json
      description: Update an existing deck by its ID
      parameters:
      - description: Deck ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated Deck
        in: body
        name: deck
        required: true
        schema:
          $ref: '#/definitions/types.Deck'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Deck'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a deck
      tags:
      - Decks
  /decks/default:
    post:
      consumes:
      - application/json
      description: Create a new deck with provided details
      parameters:
      - description: Deck to create
        in: body
        name: deck
        required: true
        schema:
          $ref: '#/definitions/types.Deck'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/types.Deck'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a default deck
      tags:
      - Decks
  /decks/import:
    post:
      consumes:
      - multipart/form-data
      description: Import a new deck by uploading a JSON file
      parameters:
      - description: Deck JSON File
        in: formData
        name: deck_file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/types.Deck'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Import a deck from a JSON file
      tags:
      - Decks
swagger: "2.0"
