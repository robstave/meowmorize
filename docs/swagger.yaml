basePath: /api
definitions:
  controller.CardContentReq:
    properties:
      text:
        type: string
    required:
    - text
    type: object
  controller.CardStatsRequest:
    properties:
      action:
        enum:
        - IncrementFail
        - IncrementPass
        - IncrementSkip
        - SetStars
        - Retire
        - Unretire
        - ResetStats
        type: string
      card_id:
        type: string
      deck_id:
        type: string
      value:
        description: Used only for SetStars
        type: integer
    required:
    - action
    - card_id
    type: object
  controller.ClearDeckStatsRequest:
    properties:
      clearSession:
        type: boolean
      clearStats:
        type: boolean
    required:
    - clearSession
    - clearStats
    type: object
  controller.CreateCardRequest:
    properties:
      back:
        $ref: '#/definitions/controller.CardContentReq'
      deck_id:
        type: string
      front:
        $ref: '#/definitions/controller.CardContentReq'
      link:
        type: string
    required:
    - back
    - deck_id
    - front
    type: object
  controller.CreateDeckRequest:
    properties:
      defaultData:
        type: boolean
    type: object
  controller.GetNextCardResponse:
    properties:
      card_id:
        type: string
    type: object
  controller.GetSessionStatsResponse:
    properties:
      current_index:
        type: integer
      remaining:
        type: integer
      total_cards:
        type: integer
      viewed_count:
        type: integer
    type: object
  controller.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  controller.LoginResponse:
    properties:
      token:
        type: string
    type: object
  controller.StartSessionRequest:
    properties:
      count:
        minimum: 1
        type: integer
      deck_id:
        type: string
      method:
        enum:
        - Random
        - Fails
        - Skips
        - Worst
        type: string
    required:
    - deck_id
    - method
    type: object
  controller.UpdateCardRequest:
    properties:
      back:
        $ref: '#/definitions/controller.CardContentReq'
      front:
        $ref: '#/definitions/controller.CardContentReq'
      link:
        type: string
    type: object
  controller.UpdateDeckRequest:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - description
    - name
    type: object
  echo.HTTPError:
    properties:
      message: {}
    type: object
  types.Card:
    properties:
      back:
        $ref: '#/definitions/types.CardBack'
      created_at:
        type: string
      deck_id:
        type: string
      fail_count:
        type: integer
      front:
        $ref: '#/definitions/types.CardFront'
      id:
        type: string
      link:
        type: string
      pass_count:
        type: integer
      retired:
        type: boolean
      reviewed_at:
        type: string
      skip_count:
        type: integer
      star_rating:
        type: integer
      updated_at:
        type: string
    type: object
  types.CardBack:
    properties:
      text:
        type: string
    type: object
  types.CardFront:
    properties:
      text:
        type: string
    type: object
  types.Deck:
    properties:
      cards:
        items:
          $ref: '#/definitions/types.Card'
        type: array
      description:
        description: New Description field
        type: string
      id:
        description: UUID string as the primary key
        type: string
      name:
        type: string
    type: object
host: 192.168.86.176:8789
info:
  contact: {}
  description: API documentation for the MeowMorize Flashcard App.
  title: MeowMorize Flashcard API
  version: "1.0"
paths:
  /cards:
    post:
      consumes:
      - application/json
      description: Create a new card and associate it with a deck
      parameters:
      - description: Create Card
        in: body
        name: card
        required: true
        schema:
          $ref: '#/definitions/controller.CreateCardRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/types.Card'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Create a new card
      tags:
      - cards
  /cards/{id}:
    delete:
      description: Delete a card by its ID
      parameters:
      - description: Card ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a card
      tags:
      - Cards
    get:
      description: Retrieve a single card by its ID
      parameters:
      - description: Card ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Card'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a card by ID
      tags:
      - Cards
    put:
      consumes:
      - application/json
      description: Update the details of an existing card by its ID
      parameters:
      - description: Card ID
        in: path
        name: id
        required: true
        type: string
      - description: Update Card
        in: body
        name: card
        required: true
        schema:
          $ref: '#/definitions/controller.UpdateCardRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Card'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Update an existing card
      tags:
      - cards
  /cards/stats:
    post:
      consumes:
      - application/json
      description: Update the statistics of a card based on the specified action
      parameters:
      - description: Card Stats Update
        in: body
        name: stats
        required: true
        schema:
          $ref: '#/definitions/controller.CardStatsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Card'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update card statistics
      tags:
      - Cards
  /decks:
    get:
      description: Retrieve a list of all decks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Deck'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all decks
      tags:
      - Decks
    post:
      consumes:
      - application/json
      description: Create a new deck with provided details
      parameters:
      - description: Deck to create
        in: body
        name: deck
        required: true
        schema:
          $ref: '#/definitions/types.Deck'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/types.Deck'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new deck
      tags:
      - Decks
  /decks/{id}:
    delete:
      description: Delete a deck by its ID
      parameters:
      - description: Deck ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a deck
      tags:
      - Decks
    get:
      description: Retrieve a single deck by its ID
      parameters:
      - description: Deck ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Deck'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a deck by ID
      tags:
      - Decks
    put:
      consumes:
      - application/json
      description: Update the name (and optionally the ID) of an existing deck by
        its ID
      parameters:
      - description: Deck ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated Deck
        in: body
        name: deck
        required: true
        schema:
          $ref: '#/definitions/controller.UpdateDeckRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Deck'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a deck
      tags:
      - Decks
  /decks/default:
    post:
      consumes:
      - application/json
      description: Create a new deck with or without default data
      parameters:
      - description: Deck creation parameters
        in: body
        name: deck
        required: true
        schema:
          $ref: '#/definitions/controller.CreateDeckRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Deck'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new deck
      tags:
      - Decks
  /decks/export/{id}:
    get:
      description: Export a deck as a JSON file
      parameters:
      - description: Deck ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Deck'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Export a deck
      tags:
      - decks
  /decks/import:
    post:
      consumes:
      - multipart/form-data
      description: Import a new deck by uploading a JSON file
      parameters:
      - description: Deck JSON File
        in: formData
        name: deck_file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/types.Deck'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Import a deck from a JSON file
      tags:
      - Decks
  /decks/stats/{id}:
    post:
      consumes:
      - application/json
      description: Clears the statistics for a specific deck. Can optionally clear
        session data and/or card statistics.
      parameters:
      - description: Deck ID
        in: path
        name: id
        required: true
        type: string
      - description: Clear Deck Statistics
        in: body
        name: stats
        required: true
        schema:
          $ref: '#/definitions/controller.ClearDeckStatsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Clear deck statistics
      tags:
      - Decks
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return a JWT token
      parameters:
      - description: User Credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/controller.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.LoginResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User Login
      tags:
      - Authentication
  /sessions/clear:
    delete:
      description: Terminate and clear the current review session for a specific deck
      parameters:
      - description: Deck ID
        in: query
        name: deck_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Clear a review session
      tags:
      - Sessions
  /sessions/next:
    get:
      description: Retrieve the ID of the next card to review in the current session
      parameters:
      - description: Deck ID
        in: query
        name: deck_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.GetNextCardResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get the next card in the session
      tags:
      - Sessions
  /sessions/start:
    post:
      consumes:
      - application/json
      description: Initiate a new review session for a specific deck with the given
        parameters
      parameters:
      - description: Session Parameters
        in: body
        name: session
        required: true
        schema:
          $ref: '#/definitions/controller.StartSessionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Start a new review session
      tags:
      - Sessions
  /sessions/stats:
    get:
      description: Retrieve the statistics of the current review session for a specific
        deck
      parameters:
      - description: Deck ID
        in: query
        name: deck_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.GetSessionStatsResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get session statistics
      tags:
      - Sessions
swagger: "2.0"
